<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.109" tests="53" failures="0">
  <testsuite name="Root Suite" timestamp="2018-10-05T21:09:46" tests="0" failures="0" time="0">
  </testsuite>
  <testsuite name="jyson.array.spec: an array in the template" timestamp="2018-10-05T21:09:46" tests="0" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.array.spec.js" failures="0" time="0">
  </testsuite>
  <testsuite name="template arrays defined by strings" timestamp="2018-10-05T21:09:46" tests="0" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.array.spec.js" failures="0" time="0">
  </testsuite>
  <testsuite name="simple arrays" timestamp="2018-10-05T21:09:46" tests="2" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.array.spec.js" failures="0" time="0.007">
    <testcase name="jyson.array.spec: an array in the template template arrays defined by strings simple arrays must convert an object to json" time="0.005" classname="must convert an object to json">
    </testcase>
    <testcase name="jyson.array.spec: an array in the template template arrays defined by strings simple arrays must convert an object to json when the array is not provided" time="0.002" classname="must convert an object to json when the array is not provided">
    </testcase>
  </testsuite>
  <testsuite name="complex arrays" timestamp="2018-10-05T21:09:46" tests="1" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.array.spec.js" failures="0" time="0.001">
    <testcase name="jyson.array.spec: an array in the template template arrays defined by strings complex arrays must convert an object to json" time="0.001" classname="must convert an object to json">
    </testcase>
  </testsuite>
  <testsuite name="template arrays defined by objects" timestamp="2018-10-05T21:09:46" tests="0" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.array.spec.js" failures="0" time="0">
  </testsuite>
  <testsuite name="simple arrays" timestamp="2018-10-05T21:09:46" tests="3" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.array.spec.js" failures="0" time="0.002">
    <testcase name="jyson.array.spec: an array in the template template arrays defined by objects simple arrays must convert an object to json" time="0.001" classname="must convert an object to json">
    </testcase>
    <testcase name="jyson.array.spec: an array in the template template arrays defined by objects simple arrays must handle undefined values when converting an object to json" time="0" classname="must handle undefined values when converting an object to json">
    </testcase>
    <testcase name="jyson.array.spec: an array in the template template arrays defined by objects simple arrays must convert an object of length 10 to json" time="0.001" classname="must convert an object of length 10 to json">
    </testcase>
  </testsuite>
  <testsuite name="complex arrays" timestamp="2018-10-05T21:09:46" tests="2" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.array.spec.js" failures="0" time="0">
    <testcase name="jyson.array.spec: an array in the template template arrays defined by objects complex arrays must convert an object to json of length one" time="0" classname="must convert an object to json of length one">
    </testcase>
    <testcase name="jyson.array.spec: an array in the template template arrays defined by objects complex arrays must convert an object to json of length two" time="0" classname="must convert an object to json of length two">
    </testcase>
  </testsuite>
  <testsuite name="arrays that access multiple arrays" timestamp="2018-10-05T21:09:46" tests="0" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.array.spec.js" failures="0" time="0">
  </testsuite>
  <testsuite name="when all the arrays are the same length" timestamp="2018-10-05T21:09:46" tests="1" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.array.spec.js" failures="0" time="0">
    <testcase name="jyson.array.spec: an array in the template template arrays defined by objects arrays that access multiple arrays when all the arrays are the same length must convert an object to json" time="0" classname="must convert an object to json">
    </testcase>
  </testsuite>
  <testsuite name="when one of the arrays is longer than the others" timestamp="2018-10-05T21:09:46" tests="1" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.array.spec.js" failures="0" time="0">
    <testcase name="jyson.array.spec: an array in the template template arrays defined by objects arrays that access multiple arrays when one of the arrays is longer than the others must convert an object to json" time="0" classname="must convert an object to json">
    </testcase>
  </testsuite>
  <testsuite name="arrays that access non array values" timestamp="2018-10-05T21:09:46" tests="2" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.array.spec.js" failures="0" time="0">
    <testcase name="jyson.array.spec: an array in the template template arrays defined by objects arrays that access non array values must convert an object to json" time="0" classname="must convert an object to json">
    </testcase>
    <testcase name="jyson.array.spec: an array in the template template arrays defined by objects arrays that access non array values must convert an object to json when the order is reversed" time="0" classname="must convert an object to json when the order is reversed">
    </testcase>
  </testsuite>
  <testsuite name="arrays that access non array values for nested arrays" timestamp="2018-10-05T21:09:46" tests="2" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.array.spec.js" failures="0" time="0">
    <testcase name="jyson.array.spec: an array in the template template arrays defined by objects arrays that access non array values for nested arrays must convert an object to json" time="0" classname="must convert an object to json">
    </testcase>
    <testcase name="jyson.array.spec: an array in the template template arrays defined by objects arrays that access non array values for nested arrays must convert an object to json when the non array value does not have a length" time="0" classname="must convert an object to json when the non array value does not have a length">
    </testcase>
  </testsuite>
  <testsuite name="template arrays of arrays of arrays" timestamp="2018-10-05T21:09:46" tests="7" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.array.spec.js" failures="0" time="0.091">
    <testcase name="jyson.array.spec: an array in the template template arrays of arrays of arrays must convert an object to json" time="0.001" classname="must convert an object to json">
    </testcase>
    <testcase name="jyson.array.spec: an array in the template template arrays of arrays of arrays must handle a missing a" time="0" classname="must handle a missing a">
    </testcase>
    <testcase name="jyson.array.spec: an array in the template template arrays of arrays of arrays must handle an empty a array" time="0" classname="must handle an empty a array">
    </testcase>
    <testcase name="jyson.array.spec: an array in the template template arrays of arrays of arrays must handle an empty b array" time="0" classname="must handle an empty b array">
    </testcase>
    <testcase name="jyson.array.spec: an array in the template template arrays of arrays of arrays must handle an empty c array" time="0" classname="must handle an empty c array">
    </testcase>
    <testcase name="jyson.array.spec: an array in the template template arrays of arrays of arrays must handle a missing empty d" time="0" classname="must handle a missing empty d">
    </testcase>
    <testcase name="jyson.array.spec: an array in the template template arrays of arrays of arrays must convert an object with many arrays to json" time="0.09" classname="must convert an object with many arrays to json">
    </testcase>
  </testsuite>
  <testsuite name="jyson.basic.spec: a basic template" timestamp="2018-10-05T21:09:46" tests="7" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.basic.spec.js" failures="0" time="0.002">
    <testcase name="jyson.basic.spec: a basic template must convert an object to &quot;json&quot;" time="0" classname="must convert an object to &quot;json&quot;">
    </testcase>
    <testcase name="jyson.basic.spec: a basic template must ignore additional values" time="0.001" classname="must ignore additional values">
    </testcase>
    <testcase name="jyson.basic.spec: a basic template must use null for missing objects" time="0" classname="must use null for missing objects">
    </testcase>
    <testcase name="jyson.basic.spec: a basic template must error if it encounters an unexpected array" time="0.001" classname="must error if it encounters an unexpected array">
    </testcase>
    <testcase name="jyson.basic.spec: a basic template must convert arrays &quot;json&quot;" time="0" classname="must convert arrays &quot;json&quot;">
    </testcase>
    <testcase name="jyson.basic.spec: a basic template must convert deep arrays &quot;json&quot;" time="0" classname="must convert deep arrays &quot;json&quot;">
    </testcase>
    <testcase name="jyson.basic.spec: a basic template must convert an object with properties &quot;json&quot;" time="0" classname="must convert an object with properties &quot;json&quot;">
    </testcase>
  </testsuite>
  <testsuite name="jyson.deep.spec: a template with deep paths" timestamp="2018-10-05T21:09:46" tests="1" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.deep.spec.js" failures="0" time="0">
    <testcase name="jyson.deep.spec: a template with deep paths must convert an object to &quot;json&quot;" time="0" classname="must convert an object to &quot;json&quot;">
    </testcase>
  </testsuite>
  <testsuite name="jyson.error.spec: testing errors in jyson" timestamp="2018-10-05T21:09:46" tests="1" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.error.spec.js" failures="0" time="0">
    <testcase name="jyson.error.spec: testing errors in jyson must error if the template cant be parsed" time="0" classname="must error if the template cant be parsed">
    </testcase>
  </testsuite>
  <testsuite name="arrays" timestamp="2018-10-05T21:09:46" tests="1" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.error.spec.js" failures="0" time="0">
    <testcase name="jyson.error.spec: testing errors in jyson arrays json template arrays must be of length 1" time="0" classname="json template arrays must be of length 1">
    </testcase>
  </testsuite>
  <testsuite name="missing a $" timestamp="2018-10-05T21:09:46" tests="3" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.error.spec.js" failures="0" time="0.001">
    <testcase name="jyson.error.spec: testing errors in jyson arrays missing a $ must error in the simple case" time="0.001" classname="must error in the simple case">
    </testcase>
    <testcase name="jyson.error.spec: testing errors in jyson arrays missing a $ must error in the simple case" time="0" classname="must error in the simple case">
    </testcase>
    <testcase name="jyson.error.spec: testing errors in jyson arrays missing a $ must error with nested keys" time="0" classname="must error with nested keys">
    </testcase>
  </testsuite>
  <testsuite name="jyson.example.spec: an example" timestamp="2018-10-05T21:09:46" tests="1" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.example.spec.js" failures="0" time="0">
    <testcase name="jyson.example.spec: an example must output example &quot;json&quot;" time="0" classname="must output example &quot;json&quot;">
    </testcase>
  </testsuite>
  <testsuite name="jyson.function.spec: a function in the template" timestamp="2018-10-05T21:09:46" tests="0" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.function.spec.js" failures="0" time="0">
  </testsuite>
  <testsuite name="simple functions" timestamp="2018-10-05T21:09:46" tests="2" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.function.spec.js" failures="0" time="0.002">
    <testcase name="jyson.function.spec: a function in the template simple functions must convert an object to &quot;json&quot;" time="0" classname="must convert an object to &quot;json&quot;">
    </testcase>
    <testcase name="jyson.function.spec: a function in the template simple functions must call functions with the correct arguments" time="0.002" classname="must call functions with the correct arguments">
    </testcase>
  </testsuite>
  <testsuite name="simple undefined functions" timestamp="2018-10-05T21:09:46" tests="1" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.function.spec.js" failures="0" time="0.001">
    <testcase name="jyson.function.spec: a function in the template simple undefined functions must convert an object to &quot;json&quot;" time="0.001" classname="must convert an object to &quot;json&quot;">
    </testcase>
  </testsuite>
  <testsuite name="nested comments via functions" timestamp="2018-10-05T21:09:46" tests="1" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.function.spec.js" failures="0" time="0">
    <testcase name="jyson.function.spec: a function in the template nested comments via functions must be able to use functions to create reddit style comments" time="0" classname="must be able to use functions to create reddit style comments">
    </testcase>
  </testsuite>
  <testsuite name="jyson.nesting.spec: a template with nesting" timestamp="2018-10-05T21:09:46" tests="1" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.nesting.spec.js" failures="0" time="0.001">
    <testcase name="jyson.nesting.spec: a template with nesting must convert an object to &quot;json&quot;" time="0.001" classname="must convert an object to &quot;json&quot;">
    </testcase>
  </testsuite>
  <testsuite name="jyson.regression.spec: avoiding regressions" timestamp="2018-10-05T21:09:46" tests="1" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.regression.spec.js" failures="0" time="0">
    <testcase name="jyson.regression.spec: avoiding regressions must continue to output all properties after a property that evaluates false" time="0" classname="must continue to output all properties after a property that evaluates false">
    </testcase>
  </testsuite>
  <testsuite name="jyson.undefinedOverride.spec: a basic template" timestamp="2018-10-05T21:09:46" tests="1" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.undefinedOverride.spec.js" failures="0" time="0">
    <testcase name="jyson.undefinedOverride.spec: a basic template must convert an object to &quot;json&quot;" time="0" classname="must convert an object to &quot;json&quot;">
    </testcase>
  </testsuite>
  <testsuite name="jyson.Value" timestamp="2018-10-05T21:09:46" tests="0" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.undefinedOverride.spec.js" failures="0" time="0">
  </testsuite>
  <testsuite name="undefinedValue" timestamp="2018-10-05T21:09:46" tests="4" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.undefinedOverride.spec.js" failures="0" time="0">
    <testcase name="jyson.undefinedOverride.spec: a basic template jyson.Value undefinedValue must use undefinedValue for missing objects when undefined is null" time="0" classname="must use undefinedValue for missing objects when undefined is null">
    </testcase>
    <testcase name="jyson.undefinedOverride.spec: a basic template jyson.Value undefinedValue must use undefinedValue for missing objects when undefined is undefined" time="0" classname="must use undefinedValue for missing objects when undefined is undefined">
    </testcase>
    <testcase name="jyson.undefinedOverride.spec: a basic template jyson.Value undefinedValue must use undefinedValue for missing objects when undefined is custom" time="0" classname="must use undefinedValue for missing objects when undefined is custom">
    </testcase>
    <testcase name="jyson.undefinedOverride.spec: a basic template jyson.Value undefinedValue must use the default undefinedValue if no custom undefinedValue is defined" time="0" classname="must use the default undefinedValue if no custom undefinedValue is defined">
    </testcase>
  </testsuite>
  <testsuite name="path" timestamp="2018-10-05T21:09:46" tests="1" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.undefinedOverride.spec.js" failures="0" time="0">
    <testcase name="jyson.undefinedOverride.spec: a basic template jyson.Value path must error if it encounters a json.Value thats missing a path" time="0" classname="must error if it encounters a json.Value thats missing a path">
    </testcase>
  </testsuite>
  <testsuite name="jyson.undefinedValue.spec: basic undefined" timestamp="2018-10-05T21:09:46" tests="3" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.undefinedValue.spec.js" failures="0" time="0.001">
    <testcase name="jyson.undefinedValue.spec: basic undefined must handle missing basic values" time="0" classname="must handle missing basic values">
    </testcase>
    <testcase name="jyson.undefinedValue.spec: basic undefined must handle missing nested values" time="0.001" classname="must handle missing nested values">
    </testcase>
    <testcase name="jyson.undefinedValue.spec: basic undefined must handle missing function values" time="0" classname="must handle missing function values">
    </testcase>
  </testsuite>
  <testsuite name="jyson.undefinedValue.spec: string undefined" timestamp="2018-10-05T21:09:46" tests="3" file="/Users/erobinson/data/hubba/jyson/spec/lib/jyson/jyson.undefinedValue.spec.js" failures="0" time="0">
    <testcase name="jyson.undefinedValue.spec: string undefined must handle missing basic values" time="0" classname="must handle missing basic values">
    </testcase>
    <testcase name="jyson.undefinedValue.spec: string undefined must handle missing nested values" time="0" classname="must handle missing nested values">
    </testcase>
    <testcase name="jyson.undefinedValue.spec: string undefined must handle missing function values" time="0" classname="must handle missing function values">
    </testcase>
  </testsuite>
</testsuites>